name: RunTests

permissions:
  contents: write
  pull-requests: write
on:
  pull_request_target:
    branches: [main]
    types: [opened, synchronize]

jobs:
  run_tests:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@users.noreply.github.com"

      - name: Run Tests
        id: testresults
        run: |
          Set-PSRepository psgallery -InstallationPolicy trusted
          Install-Module -Name Pester -Confirm:$false -Force
          Invoke-Pester

      - name: Set default label
        run: |
          $prLabelsJson = gh pr view ${{ github.event.pull_request.number }} --json labels
          $prLabels = $prLabelsJson | ConvertFrom-Json

          $VERSION_LABELS = @('version:MAJOR', 'version:MINOR', 'version:PATCH')
          $existingVersionLabels = $prLabels.labels | Where-Object { $VERSION_LABELS -contains $_.name }

          if ($existingVersionLabels.Count -eq 0) {
            Write-Output "üè∑Ô∏è Setting default version label"
            gh pr edit ${{ github.event.pull_request.number }} --add-label "version:MINOR"
          } else {
            Write-Output "üè∑Ô∏è labels already exist, removing mutually exclusive ones"

            switch ($existingVersionLabels.name) {
              'version:MAJOR' {
                gh pr edit ${{ github.event.pull_request.number }} --remove-label "version:MINOR" --remove-label "version:PATCH"
                break
              }
              'version:MINOR' {
                gh pr edit ${{ github.event.pull_request.number }} --remove-label "version:PATCH"
              }
            }
          }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
